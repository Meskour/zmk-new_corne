/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB     &kp Q        &kp W       &kp E       &kp R        &kp T                                  &kp UP                &kp Y      &kp U        &kp I       &kp O       &kp P     &kp BSPC
&kp ESCAPE  &tp LCTRL A  &tp LALT S  &tp LGUI D  &tp LS(F) F  &kp G                        &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &tp LSHFT J  &tp LGUI K  &tp LALT L  &kp SEMI  &lt 1 SQT
&kp LSHIFT  &kp Z        &kp X       &kp C       &kp V        &kp B           &kp SPACE              &kp DOWN              &kp N      &kp M        &kp COMMA   &kp DOT     &kp FSLH  &kp ENTER
                                     &kp LALT    &mo 1        &tp LGUI SPACE                                               &kp SPACE  &mo 2        &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_below {
            bindings = <
&mmv MOVE_UP    &kp NUMBER_1     &kp N2  &kp N3           &kp N4      &kp N5                                             &kp UP                &kp N6        &kp N7     &kp N8           &kp N9                &kp N0                 &kp BSPC
&mmv MOVE_LEFT  &kp EXCLAMATION  &kp AT  &kp HASH         &kp DOLLAR  &kp PERCENT                              &kp LEFT  &kp ENTER  &kp RIGHT  &kp CARET     &kp AMPS   &kp KP_MULTIPLY  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&mmv MOVE_DOWN  &kp F1           &kp F2  &kp F3           &kp F4      &kp F5                      &kp SPACE              &kp DOWN              &kp F6        &kp MINUS  &kp EQUAL        &kp LBRC              &kp RBRC               &kp BACKSLASH
                                         &mmv MOVE_RIGHT  &trans      &tp LC(LS(LA(LGUI))) SPACE                                               &tp LALT RET  &mo 2      &kp HOME
            >;
        };

        layer_above {
            bindings = <
&mmv MOVE_UP    &kp C_PREVIOUS  &kp C_PLAY    &kp C_NEXT       &trans              &trans                               &kp UP                &kp F6           &kp F7          &kp F8           &kp F9           &kp F10          &trans
&mmv MOVE_DOWN  &kp C_MUTE      &kp C_VOL_DN  &kp C_VOL_UP     &kp C_FAST_FORWARD  &kp C_REWIND               &kp LEFT  &kp ENTER  &kp RIGHT  &kp LEFT         &kp DOWN        &kp UP           &kp RIGHT        &kp BSLH         &kp GRAVE
&mmv MOVE_LEFT  &kp HOME        &kp PAGE_UP   &kp PAGE_DOWN    &kp END             &trans        &kp SPACE              &kp DOWN              &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD
                                              &mmv MOVE_RIGHT  &trans              &trans                                                     &trans           &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans                    &trans          &trans  &trans     &trans  &trans  &trans  &trans
&trans  &kp LC(S)  &kp LC(C)  &kp LC(V)  &kp LC(T)  &trans            &trans  &trans  &trans  &trans  &kp LA(X)  &trans  &trans  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(F)  &kp LC(G)  &trans  &trans            &trans          &trans  &trans     &trans  &trans  &trans  &trans
                              &trans     &trans     &mo 3                                     &trans  &trans     &trans
            >;
        };
    };
};
