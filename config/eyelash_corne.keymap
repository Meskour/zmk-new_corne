/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          }; 
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T                              &kp UP                &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H &kp J  &kp K     &kp L   &kp SEMI &lt 1 SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B       &kp SPACE              &kp DOWN              &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                          &kp LGUI &mo 1 &tp LALT RET                                          &tp LC(LS(LA(LGUI))) SPACE &kp BSPC &mo 2
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };

                layer_below {
                        bindings = <
   &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                           &kp UP                &kp CARET  &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSLH
   &trans    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp MINUS  &kp EQUAL &kp GRAVE       &kp LBKT &kp RBKT &kp PIPE
   &kp LSHFT &kp N6   &kp N7 &kp N8   &kp N9   &kp N0      &kp SPACE              &kp DOWN              &kp UNDER  &kp PLUS  &kp TILDE       &kp LBRC &kp RBRC &kp RSHFT
                              &kp LGUI &trans   &tp LALT RET                                             &tp LC(LS(LA(LGUI))) SPACE &kp BSPC  &trans
                        >;
                };

                layer_above {
                        bindings = <
   &trans     &kp F1        &kp F2       &kp F3       &kp F4       &kp F5                               &kp UP                &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &trans
   &trans     &kp C_PREV    &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP                  &kp LEFT  &kp ENTER  &kp RIGHT  &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans  &trans
   &bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &kp SPACE            &kp DOWN              &trans   &trans   &trans &trans    &trans  &trans
                                         &trans       &trans       &trans                                                     &trans   &trans   &trans
                        >;
                };
        };
};
